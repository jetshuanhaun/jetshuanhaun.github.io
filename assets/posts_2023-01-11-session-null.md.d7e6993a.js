import{_ as s,o as n,c as a,f as l}from"./app.a56962f7.js";const A=JSON.parse('{"title":"验证码session为空的解决办法以及原理解析","description":"flask处理验证码session为空的情况","frontmatter":{"title":"验证码session为空的解决办法以及原理解析","tags":["Session","react","flask"],"layout":"post","date":"2023-01-11","description":"flask处理验证码session为空的情况"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"1 解决办法：","slug":"_1-解决办法","link":"#_1-解决办法","children":[{"level":3,"title":"1.1设置代理","slug":"_1-1设置代理","link":"#_1-1设置代理","children":[]},{"level":3,"title":"1.2 前端配置","slug":"_1-2-前端配置","link":"#_1-2-前端配置","children":[]},{"level":3,"title":"1.3 后端配置","slug":"_1-3-后端配置","link":"#_1-3-后端配置","children":[]}]},{"level":2,"title":"2 原理解析：","slug":"_2-原理解析","link":"#_2-原理解析","children":[{"level":3,"title":"2.1 什么是session？","slug":"_2-1-什么是session","link":"#_2-1-什么是session","children":[]},{"level":3,"title":"2.2 Session-Cookies是什么？","slug":"_2-2-session-cookies是什么","link":"#_2-2-session-cookies是什么","children":[]}]}],"relativePath":"posts/2023-01-11-session-null.md"}'),o={name:"posts/2023-01-11-session-null.md"},p=l(`<h1 id="验证码session为空的解决办法以及原理解析" tabindex="-1">验证码session为空的解决办法以及原理解析 <a class="header-anchor" href="#验证码session为空的解决办法以及原理解析" aria-hidden="true">#</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-hidden="true">#</a></h2><p>本文使用的技术栈：前端<strong>react</strong>，后端<strong>flask</strong> 需求:前端输入验证码，进行登录时候，匹配后端的session，验证验证码是否是同一个 但是出现的问题：session为空</p><h2 id="_1-解决办法" tabindex="-1">1 解决办法： <a class="header-anchor" href="#_1-解决办法" aria-hidden="true">#</a></h2><h3 id="_1-1设置代理" tabindex="-1">1.1设置代理 <a class="header-anchor" href="#_1-1设置代理" aria-hidden="true">#</a></h3><p>前端通过代理设置解决跨域后，保证前后端在同一个ip下面，端口可以不一样。</p><p>比如，我这的是前端是<a href="http://localhost:3301/%EF%BC%8C%E5%90%8E%E7%AB%AF%E6%98%AFhttp://localhost:5000/,%E5%90%8E%E7%AB%AF%E8%AE%BE%E7%BD%AE%E4%B8%BAhttp://127.0.0.1:5000/%E4%B9%9F%E4%B8%8D%E8%A1%8C%EF%BC%81" target="_blank" rel="noreferrer">http://localhost:3301/，后端是http://localhost:5000/,后端设置为http://127.0.0.1:5000/也不行！</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#FFCB6B;">proxy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">					</span><span style="color:#676E95;font-style:italic;">// target: &quot;http://127.0.0.1:5000/&quot;,</span></span>
<span class="line"><span style="color:#F07178;">					target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:5000/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">					changeOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#82AAFF;">rewrite</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">api</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-2-前端配置" tabindex="-1">1.2 前端配置 <a class="header-anchor" href="#_1-2-前端配置" aria-hidden="true">#</a></h3><p>请求库设置，axios的配置</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> config </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">baseURL</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VITE_API_URL </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> *</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;">*</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//允许携带凭证</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-3-后端配置" tabindex="-1">1.3 后端配置 <a class="header-anchor" href="#_1-3-后端配置" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">passport_bp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/captcha</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_captcha</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#A6ACCD;">    captcha_code</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">captcha_image </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gen_captcha</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    out </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BytesIO</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">captcha_code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    session</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> captcha_code</span></span>
<span class="line"><span style="color:#A6ACCD;">    captcha_image</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">save</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">out</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">seek</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make_response</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">content_type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">image/png</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Origin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Methods</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">GET,OPTIONS</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Headers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type, Content-Length, Authorization, Accept, X-Requested-With</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Credentials</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Content-Type</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">image/png;charset=utf-8</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> resp</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-原理解析" tabindex="-1">2 原理解析： <a class="header-anchor" href="#_2-原理解析" aria-hidden="true">#</a></h2><h3 id="_2-1-什么是session" tabindex="-1">2.1 什么是session？ <a class="header-anchor" href="#_2-1-什么是session" aria-hidden="true">#</a></h3><p>session是会话的意思是，无状态协议通信过程中，为了实现中断/继续操作，将用户和服务器之间的交互进行的一种抽象。</p><p><strong>原理流程：</strong></p><ol><li>**客户端：**用户向服务器首次发送请求；</li><li>**服务器：**接收到数据并自动为该用户创建特定的 Session / Session ID，来标识用户并跟踪用户当前的会话过程；</li><li>**客户端：**浏览器收到响应获取会话信息，并且会在下一次请求时带上 Session / Session ID；</li><li>**服务器：**服务器提取后会与本地保存的 Session ID进行对比找到该特定用户的会话，进而获取会话状态；</li><li>至此客户端与服务器的通信变成有状态的通信；</li></ol><p><strong>特点：</strong></p><ul><li>Session 保存在服务器上；</li><li>通过服务器自带的加密协议进行；</li></ul><p><strong>与 Cookie 的差异：</strong></p><ul><li>**安全性：**Cookie 由于保存在客户端，可随意篡改，Session 则不同存储在服务器端，无法伪造，所以 Session 的安全性更高；</li><li>**存取值的类型不同：**Cookie 只支持字符串数据，Session 可以存任意数据类型；</li><li>**有效期不同：**Cookie 可设置为长时间保持，Session 一般失效时间较短；</li><li>**存储大小不同：**Cookie 保存的数据不能超过 4K；</li></ul><h3 id="_2-2-session-cookies是什么" tabindex="-1">2.2 Session-Cookies是什么？ <a class="header-anchor" href="#_2-2-session-cookies是什么" aria-hidden="true">#</a></h3><p>Session-Cookies是将Session<code>存储在了客户端的</code>Cookie，在flask使用了session就会将session存入到客户端中</p><p>具体代码：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> captcha_code</span></span>
<span class="line"></span></code></pre></div><p><strong>具体的认证步骤：</strong></p><p>1 前端（客户端）请求验证码接口时，服务端将生成的验证码保存到session里面，此过程会生成一个唯一的标识字符串会话身份凭证<code>session_id</code>，然后将在响应头设置允许携带凭证，这时前端的响应头会出现<strong>Set-Cookie</strong>字段，里面保存了该session的信息。</p><p>后端设置凭证的关键代码;</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">resp</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Access-Control-Allow-Credentials</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>前端响应头的<strong>Set-Cookie</strong>字段;</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> session</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">eyJjYXBfY29kZSI6InBiYmoiLCJjb2RlIjoieWk4YiJ9</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Y766xQ</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UAvklWP1PNM2qY10AB7Y6CfXQ</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> HttpOnly</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Path</span><span style="color:#89DDFF;">=/</span></span>
<span class="line"></span></code></pre></div><p>前端（客户端）进行登录的时候，需要设置请求允许携带凭证，然后进行登录请求的时候，会携带刚刚生成的Cookie信息，登录接口里面的session操作会解析传来的Cookie，根据session_id去寻找报错的session_id，即保证了刚刚会话的唯一性，这样子验证码和登录接口使用的是同一个session，而不会导致session丢失的情况发生。这个过程在flask里面的session会自动完成。</p>`,33),e=[p];function t(c,r,D,F,y,i){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
